<?php

/**
 * Copyright Â© 2016 Wyomind. All rights reserved.
 * See LICENSE.txt for license details.
 */

namespace Wyomind\Elasticsearch\Model\Indexer;

use Magento\Catalog\Model\Category as CategoryObject;
use Magento\Catalog\Model\ResourceModel\Category\Collection as CategoryCollection;
use Magento\CatalogUrlRewrite\Model\CategoryUrlRewriteGenerator;

class Category extends AbstractIndexer
{

    /**
     * @param int $storeId
     * @param array $ids
     * @return \Generator
     */
    public function export(
        $storeId,
        $ids = []
    ) {
    
        $this->eventManager->dispatch('wyomind_elasticsearch_category_export_before', [ 'store_id' => $storeId, 'ids' => $ids]);

        $categories = [];

        /** @var \Magento\Store\Model\Store $store */
        $store = $this->storeManager->getStore($storeId);
        $attributesConfig = $this->indexerHelper->getEntitySearchableAttributes('category', $store);
        $rootCategoryId = $store->getRootCategoryId();

        /** @var CategoryCollection $collection */
        $collection = $this->createCategoryCollection()
                ->setStoreId($store->getId())
                ->addIsActiveFilter()
                ->addAttributeToSelect($attributesConfig)
                ->addAttributeToFilter('path', ['like' => "1/{$rootCategoryId}/%"]);

        // don't use : $collection->addUrlRewriteToResult();
        // because it use the current store id
        // ( very bad when saving a category in the backend ! )
        $collection->joinTable(
            'url_rewrite',
            'entity_id = entity_id',
            ['request_path'],
            sprintf(
                '{{table}}.is_autogenerated = 1 AND {{table}}.store_id = %d AND {{table}}.entity_type = \'%s\'',
                $storeId,
                CategoryUrlRewriteGenerator::ENTITY_TYPE
            ),
            'left'
        );

        foreach ($collection as $category) {
            /** @var CategoryObject $category */
            $categories[$category->getId()] = array_merge(
                [
                \Wyomind\Elasticsearch\Helper\Config::CATEGORIES_ID => $category->getId(),
                \Wyomind\Elasticsearch\Helper\Config::CATEGORIES_URL => $category->getUrl(),
                \Wyomind\Elasticsearch\Helper\Config::CATEGORIES_PATH => $this->categoryHelper->getCategoryPathName($category),
                    ],
                $category->toArray($attributesConfig)
            );
        }

        yield $categories;
        
        $this->eventManager->dispatch('wyomind_elasticsearch_category_export_after', [ 'store_id' => $storeId, 'ids' => $ids]);
    }
}
